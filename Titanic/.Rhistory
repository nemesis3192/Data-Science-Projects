read.csv('train.csv')
trainingData <- read.csv('train.csv')
str(trainingData)
str(trainingData)
trainingData <- read.csv('train.csv',stringsAsFactors = F)
str(trainingData)
table(trainingData$Survived)
prop.table(trainingData$Survived)
prop.table(table(trainingData$Survived))
prop.table(table(trainingData$Survived))
prop.table(table(trainingData$Sex,trainingData$Survived),1)
str(trainingData)
trainingData$Child <- ifelse(trainingData$Age < 18,1,0)
str(trainingData)
aggregate(Survived~Age+Sex,data=trainingData,FUN = sum)
aggregate(Survived~Child+Sex,data=trainingData,FUN = sum)
aggregate(Survived~Age+Sex,data=trainingData,FUN = sum)
aggregate(Survived~Child+Sex,data=trainingData,FUN = sum)
aggregate(Survived~Child+Sex,data=trainingData,FUN = length)
aggregate(Survived~Child+Sex,data=trainingData,FUN = function(x){sum(x)/length(x)})
rm(list = ls())
#Load datasets
train <- read.csv('train.csv',stringsAsFactors = F)
test <- read.csv('test.csv',stringsAsFactors = F)
gender_submission <- read.csv('gender_submission.csv',stringsAsFactors = F)
head(gender_submission)
table(train$Survived)
prop.table(table(train$Survived))
train$isChild <- ifelse(train$Age < 18,1,0)
str(train)
library(dplyr)
table(train$Fare)
train$FareCat <- case_when(
train$Fare < 10 ~ '<10',
train$Fare <20 & train$Fare >= 10 ~ '10-20',
train$Fare <30 & train$Fare >= 20 ~ '10-30'
train$Fare > 30 ~ '>30'
)
train$FareCat <- case_when(
train$Fare < 10 ~ '<10',
train$Fare <20 & train$Fare >= 10 ~ '10-20',
train$Fare <30 & train$Fare >= 20 ~ '10-30',
train$Fare > 30 ~ '>30'
)
str(train)
aggregate(Survived~isChild+Sex+FareCat,data = train,FUN = function(x){sum(x)/length(x)})
range(train$Fare)
View(train)
train$FareCat <- case_when(
train$Fare < 10 ~ '<10',
train$Fare < 20 & train$Fare >= 10 ~ '10-20',
train$Fare < 30 & train$Fare >= 20 ~ '10-30',
train$Fare < 50 & train$Fare >= 30 ~ '30-50',
train$Fare < 100 & train$Fare >= 50 ~ '50-100',
train$Fare < 250 & train$Fare >= 100 ~ '100-250',
train$Fare < 500 & train$Fare >= 250 ~ '250-500',
train$Fare > 500 ~ '>500'
)
aggregate(Survived~isChild+Sex+FareCat,data = train,FUN = function(x){sum(x)/length(x)})
install.packages(rpart)
install.packages(rpart)
install.packages(rpart)
install.packages("rpart")
install.packages("rpart")
library(rpart)
colnames(train)
tree <- rpart(Survived~Sex+Pclass+Age+SibSp+Parch+Fare+Embarked,data = train,method = 'class')
plot(tree)
text(tree)
install.packages("rattle")
install.packages("RColorBrewer")
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(rattle)
fancyRpartPlot(tree)
prediction <- predict(tree,test,type = 'class')
submission <- data.frame(PassengerID = test$PassengerId, Survived = prediction)
write.csv(submission,'titanicTreeModel.csv')
summary(train$Age)
train <- read.csv('train.csv',stringsAsFactors = F)
combined <- rbind(train,test)
test$Survived <- NA
combined <- rbind(train,test)
combined$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combined$Title <- sapply(combined$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
str(combined)
combined$Title[combined$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combined$Title[combined$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
combined$Title <- factor(combined$Title)
combined$FamilySize <- combined$SibSp + combined$Parch + 1
combined$Surname <- sapply(combined$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combined$FamilyID <- paste(as.character(combined$FamilySize), combined$Surname, sep="")
combined$FamilyID[combined$FamilySize <= 2] <- 'Small'
famIDs <- data.frame(table(combined$FamilyID))
combined$FamilyID[combined$FamilyID %in% famIDs$Var1] <- 'Small'
combined$FamilyID <- factor(combined$FamilyID)
combined$Title <- factor(combined$Title)
train <- combined[1:891,]
test <- combined[892:1309,]
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data=train,
method="class")
summary(train$Age)
summary(combined$Age)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combined[!is.na(combined$Age),],
method="anova")
combined$Age[is.na(combined$Age)] <- predict(Agefit, combi[is.na(combined$Age),])
combined$Age[is.na(combined$Age)] <- predict(Agefit, combined[is.na(combined$Age),])
summary(combined$Embarked)
summary(combined)
which(combi$Embarked == '')
which(combined$Embarked == '')
combined[which(combined$Embarked == ''),'Embarked'] <- 'S'
combined$Embarked <- factor(combined$Embarked)
summary(combined$Fare)
combined[which(is.na(combined$Fare)),'Fare'] <- median(combined$Fare,na.rm = T)
summary(combined$Fare)
combined$FamilyID2 <- combined$FamilyID
combined$FamilyID2 <- as.character(combined$FamilyID2)
combined$FamilyID2[combined$FamilySize <= 3] <- 'Small'
combined$FamilyID2 <- factor(combined$FamilyID2)
summary(combined$FamilyID2)
combined$FamilyID2
unique(combined$FamilyID2)
View(combined)
combined$FamilyID2 <- as.character(combined$FamilyID2)
combined$FamilyID2[combined$FamilySize <= 3] <- 'Small'
View(combined)
install.packages("stockPortfolio")
install.packages("stockPortfolio")
install.packages("stockPortfolio")
library(dplyr)
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
#Load datasets
train <- read.csv('train.csv',stringsAsFactors = F)
test <- read.csv('test.csv',stringsAsFactors = F)
gender_submission <- read.csv('gender_submission.csv',stringsAsFactors = F)
install.packages("rattle")
install.packages("rpart.plot")
library(dplyr)
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
#Load datasets
train <- read.csv('train.csv',stringsAsFactors = F)
test <- read.csv('test.csv',stringsAsFactors = F)
gender_submission <- read.csv('gender_submission.csv',stringsAsFactors = F)
#Basic survival data
table(train$Survived)
#Survival probablity
prop.table(table(train$Survived))
#Add new fields
train$isChild <- ifelse(train$Age < 18,1,0)
train$FareCat <- case_when(
train$Fare < 10 ~ '<10',
train$Fare < 20 & train$Fare >= 10 ~ '10-20',
train$Fare < 30 & train$Fare >= 20 ~ '10-30',
train$Fare < 50 & train$Fare >= 30 ~ '30-50',
train$Fare < 100 & train$Fare >= 50 ~ '50-100',
train$Fare < 250 & train$Fare >= 100 ~ '100-250',
train$Fare < 500 & train$Fare >= 250 ~ '250-500',
train$Fare > 500 ~ '>500'
)
aggregate(Survived~isChild+Sex+FareCat,data = train,FUN = function(x){sum(x)/length(x)})
#Decision tree
tree <- rpart(Survived~Sex+Pclass+Age+SibSp+Parch+Fare+Embarked,data = train,method = 'class')
fnacyRpartPlot(tree)
library(rpart.plot)
library(RColorBrewer)
fnacyRpartPlot(tree)
fancyRpartPlot(tree)
